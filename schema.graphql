"""
Indicates exactly one field must be supplied and this field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

"""category"""
type Category {
  creationAt: DateTime!
  id: ID!
  image: String!
  name: String!
  products: [Product!]!
  slug: String!
  updatedAt: DateTime!
}

input CreateCategoryDto {
  image: String!
  name: String!
}

input CreateProductDto {
  categoryId: Float!
  description: String!
  images: [String!]!
  price: Float!
  title: String!
}

input CreateUserDto {
  avatar: String!
  email: String!
  name: String!
  password: String!
  role: Role
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Login """
type Login {
  access_token: String!
  refresh_token: String!
}

type Mutation {
  addCategory(data: CreateCategoryDto!): Category!
  addProduct(data: CreateProductDto!): Product!
  addUser(data: CreateUserDto!): User!
  deleteCategory(id: ID!): Boolean!
  deleteProduct(id: ID!): Boolean!
  deleteUser(id: ID!): Boolean!
  login(email: String!, password: String!): Login!
  refreshToken(refreshToken: String!): Login!
  updateCategory(changes: UpdateCategoryDto!, id: ID!): Category!
  updateProduct(changes: UpdateProductDto!, id: ID!): Product!
  updateUser(changes: UpdateUserDto!, id: ID!): User!
}

"""product """
type Product {
  category: Category!
  creationAt: DateTime!
  description: String!
  id: ID!
  images: [String!]!
  price: Float!
  slug: String!
  title: String!
  updatedAt: DateTime!
}

type Query {
  categories: [Category!]!
  category(id: ID!): Category!
  isAvailable(email: String!): Boolean!
  myProfile: User!
  product(id: ID!): Product!
  products(categoryId: Float, categorySlug: String, limit: Int, offset: Int, price: Int, price_max: Int, price_min: Int, title: String): [Product!]!
  user(id: ID!): User!
  users(limit: Float): [User!]!
}

enum Role {
  admin
  customer
}

input UpdateCategoryDto {
  image: String
  name: String
}

input UpdateProductDto {
  categoryId: Float
  description: String
  images: [String!]
  price: Float
  title: String
}

input UpdateUserDto {
  avatar: String
  email: String
  name: String
  password: String
  role: Role
}

"""product """
type User {
  avatar: String!
  creationAt: DateTime!
  email: String!
  id: ID!
  name: String!
  password: String!
  role: String!
  updatedAt: DateTime!
}
